

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dundee Zhang
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }
    boolean firstRun = false;
    boolean secondRun = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        drawingArea1 = new DrawingArea();
        displayCoords = new javax.swing.JLabel();
        haidaStartLabel = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        subStartLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        subSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        aField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        haidaSpeedSlider = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        jSlider3 = new javax.swing.JSlider();
        searchButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        tracersToggle = new javax.swing.JToggleButton();
        inwardsSpiralToggle = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        drawingArea1.setPreferredSize(new java.awt.Dimension(700, 460));
        drawingArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drawingArea1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout drawingArea1Layout = new javax.swing.GroupLayout(drawingArea1);
        drawingArea1.setLayout(drawingArea1Layout);
        drawingArea1Layout.setHorizontalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawingArea1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayCoords, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(444, Short.MAX_VALUE))
        );
        drawingArea1Layout.setVerticalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawingArea1Layout.createSequentialGroup()
                .addContainerGap(449, Short.MAX_VALUE)
                .addComponent(displayCoords)
                .addContainerGap())
        );

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText("Click on Graph Area to setup Sub and Haida start positions. (Click 1 = Sub, Click 2 = Haida)");

        jLabel1.setText("Sub Speed (kts):");

        subSlider.setMajorTickSpacing(1);
        subSlider.setMaximum(8);
        subSlider.setMinimum(6);
        subSlider.setMinorTickSpacing(1);
        subSlider.setPaintLabels(true);
        subSlider.setPaintTicks(true);
        subSlider.setSnapToTicks(true);
        subSlider.setToolTipText("");
        subSlider.setValue(7);
        subSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                subSliderMouseReleased(evt);
            }
        });

        jLabel4.setText("Y = ");

        aField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("*");

        jLabel5.setText("a");

        jLabel6.setText("b");

        bField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("^x");

        jLabel9.setText("Haida Speed (kts):");

        haidaSpeedSlider.setMajorTickSpacing(8);
        haidaSpeedSlider.setMaximum(38);
        haidaSpeedSlider.setMinimum(30);
        haidaSpeedSlider.setMinorTickSpacing(1);
        haidaSpeedSlider.setPaintLabels(true);
        haidaSpeedSlider.setPaintTicks(true);
        haidaSpeedSlider.setSnapToTicks(true);
        haidaSpeedSlider.setValue(32);
        haidaSpeedSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                haidaSpeedSliderMouseReleased(evt);
            }
        });

        jLabel10.setText("Max Search Radius (x100px):");

        jSlider3.setMajorTickSpacing(4);
        jSlider3.setMaximum(5);
        jSlider3.setMinimum(1);
        jSlider3.setMinorTickSpacing(1);
        jSlider3.setPaintLabels(true);
        jSlider3.setPaintTicks(true);
        jSlider3.setSnapToTicks(true);
        jSlider3.setValue(1);
        jSlider3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSlider3MouseReleased(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        tracersToggle.setText("Tracers Toggle");
        tracersToggle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tracersToggleItemStateChanged(evt);
            }
        });
        tracersToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tracersToggleActionPerformed(evt);
            }
        });

        inwardsSpiralToggle.setText("Inward Spiral Toggle");
        inwardsSpiralToggle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                inwardsSpiralToggleItemStateChanged(evt);
            }
        });
        inwardsSpiralToggle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inwardsSpiralToggleStateChanged(evt);
            }
        });
        inwardsSpiralToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inwardsSpiralToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(subSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(aField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel8))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(33, 33, 33)))
                                    .addGap(12, 12, 12)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(11, 11, 11)
                                            .addComponent(jLabel6)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel7))
                                        .addComponent(bField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel9)
                                .addComponent(haidaSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSlider3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tracersToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inwardsSpiralToggle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(aField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(haidaSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tracersToggle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inwardsSpiralToggle))
        );

        jButton1.setText("Quit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(drawingArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(subStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(haidaStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drawingArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(haidaStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subSliderMouseReleased
        errorLabel.setText("");
        // set subspeed to the value of the slider
        DrawingArea.subSpeed = subSlider.getValue();
    }//GEN-LAST:event_subSliderMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0); // exit program
    }//GEN-LAST:event_jButton1ActionPerformed

    private void aFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aFieldActionPerformed
        errorLabel.setText("");
        // if aField is submitted, go to bField
        bField.requestFocus();     
    }//GEN-LAST:event_aFieldActionPerformed

    private void bFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFieldActionPerformed
        errorLabel.setText("");
        // go to search button
        searchButton.requestFocus();
    }//GEN-LAST:event_bFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // update all of the DrawingArea gui variables to most recent
        DrawingArea.subSpeed = subSlider.getValue();  
        DrawingArea.haidaSpeed = haidaSpeedSlider.getValue(); 
        DrawingArea.haidaRadius = jSlider3.getValue() * 100;  
        boolean good = true; // good input boolean
        errorLabel.setText("");
        try { // see if input is a double
            double b = Double.parseDouble(bField.getText());
            // see if input is in the correct format before proceeding
            if(b <= 2.0 && b >= 0.7) {
                if ((b * 10) % 1 == 0) {
                    DrawingArea.b = b;
                } else {
                    // display error message
                    errorLabel.setText("b is in intervals of 0.1");
                    good = false; // input bad
                }
                
            } else {
                bField.requestFocus();
                // display error message
                errorLabel.setText("b is between 0.7 and 2");
                good = false; // input bad
            }
        } catch(NumberFormatException e) {
            bField.requestFocus();
            // display error message
            errorLabel.setText("Enter a number for b");
            good = false; // input bad
        }

        try { // see if input is a double
            double a = Double.parseDouble(aField.getText());
            // check to see if a is in correct format
            if(a <= 5.0 && a >= -5.0) {
                if (a % 0.5 == 0) {
                    DrawingArea.a = a;
                    bField.requestFocus();
                } else {
                    // display error message
                    errorLabel.setText("a is in intervals of 0.5");
                    aField.requestFocus();
                    good = false; // input bad
                }
                
            } else {
                aField.requestFocus();
                // display error message
                errorLabel.setText("a is between -5 and 5");
                good = false; // input bad
            }
        } catch(NumberFormatException e) {
            aField.requestFocus();
            // display error message
            errorLabel.setText("Enter a number for a");
            good = false; // input bad
        }
        
        if(good && secondRun) {
            // if every condition is satisfied, program to visualize graph can start
            DrawingArea.started = true; // start the paintComponent
            DrawingArea.xy.add(DrawingArea.subX); // add first points to the sub arrayList
            DrawingArea.xy.add(DrawingArea.subY);
            DrawingArea.submarine(DrawingArea.xy, 1); // calculate the sub arrayList
            
            for(int i = 0; i < DrawingArea.xy.size(); i+= 2) {
                // output all of the sub's points
                System.out.printf("(%d, %d)\n", DrawingArea.xy.get(i), DrawingArea.xy.get(i + 1));
            }
        } else {
            if(!secondRun) {
                // display error message
                errorLabel.setText("Please click on graph area to set sub and haida coordinates");
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void haidaSpeedSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_haidaSpeedSliderMouseReleased
        errorLabel.setText("");
        // set Haida speed to the value of the slider
        DrawingArea.haidaSpeed = haidaSpeedSlider.getValue();   
    }//GEN-LAST:event_haidaSpeedSliderMouseReleased

    private void jSlider3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider3MouseReleased
        errorLabel.setText("");
        // set haida Radius to the value of the slider
        DrawingArea.haidaRadius = jSlider3.getValue() * 100;  
    }//GEN-LAST:event_jSlider3MouseReleased

    private void inwardsSpiralToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inwardsSpiralToggleActionPerformed
        // uneeded but cannot delete
    }//GEN-LAST:event_inwardsSpiralToggleActionPerformed

    private void tracersToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tracersToggleActionPerformed
        // uneeded but cannot delete
    }//GEN-LAST:event_tracersToggleActionPerformed

    private void tracersToggleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tracersToggleItemStateChanged
        if(evt.getStateChange() == evt.SELECTED) {
            DrawingArea.tracers = true; // turn on tracers for path
        } else {
            DrawingArea.tracers = false; // just display current positions
        }
    }//GEN-LAST:event_tracersToggleItemStateChanged

    private void drawingArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingArea1MouseClicked
        if(!firstRun) { // if never clicked
            DrawingArea.subX = evt.getX(); // first click is for sub coordinates
            DrawingArea.subY = evt.getY();
            // update text box to tell user where sub starts at
            subStartLabel.setText("SUB START AT: (" + DrawingArea.subX + ", " + DrawingArea.subY + ")");
            DrawingArea.subY = Math.abs(460 - DrawingArea.subY); // update subY to match ArrayList format
            firstRun = true; // ran once
        } else {
            if(!secondRun) { // if ran once, run
                DrawingArea.haidaX = evt.getX(); // second click is for haida coordinates
                DrawingArea.haidaY = evt.getY();
                // update text box to tell user where the Haida starts
                haidaStartLabel.setText("HAIDA START AT: (" + DrawingArea.haidaX + ", " + DrawingArea.haidaY + ")");
                secondRun = !secondRun; // ran twice
            }
        }
    }//GEN-LAST:event_drawingArea1MouseClicked

    private void inwardsSpiralToggleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inwardsSpiralToggleStateChanged
        // uneeded but cannot delete
    }//GEN-LAST:event_inwardsSpiralToggleStateChanged

    private void inwardsSpiralToggleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_inwardsSpiralToggleItemStateChanged
        if(evt.getStateChange() == evt.SELECTED) {
            DrawingArea.inwards = true; // set haida to spiral inwards
        } else {
            DrawingArea.inwards = false;// set haida to spiral outwards
        }
    }//GEN-LAST:event_inwardsSpiralToggleItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aField;
    private javax.swing.JTextField bField;
    private javax.swing.JLabel displayCoords;
    private DrawingArea drawingArea1;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JSlider haidaSpeedSlider;
    private javax.swing.JLabel haidaStartLabel;
    private javax.swing.JToggleButton inwardsSpiralToggle;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JButton searchButton;
    private javax.swing.JSlider subSlider;
    private javax.swing.JLabel subStartLabel;
    private javax.swing.JToggleButton tracersToggle;
    // End of variables declaration//GEN-END:variables
}
